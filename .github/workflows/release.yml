# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Packaging

on:
  push:
    branches: [ main ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  packaging:
    name: Packaging
    runs-on: ubuntu-latest
    steps:
      - name: Getting Source files...
        uses: actions/checkout@v2
      - name: Initialization...
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install # will run `yarn install` command
      - name: Building...
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: build # will run `yarn build` command
      - name: Preparing artifacts folder
        run: mkdir artifacts
      - name: Zipping package
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./artifacts/package.zip ./dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./artifacts/package.zip
          asset_name: Package
          asset_content_type: application/zip
